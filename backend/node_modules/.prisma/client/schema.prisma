generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id               String        @id @default(cuid())
  adminSecret      String        @unique
  participantCount Int
  status           SessionStatus @default(WAITING)
  threshold        Int           @default(50)
  createdAt        DateTime      @default(now())
  expiresAt        DateTime

  participants Participant[]
  scores       Score[]

  @@map("sessions")
}

model Participant {
  id           String    @id @default(cuid())
  sessionId    String
  hashCode     String    @unique
  hasSubmitted Boolean   @default(false)
  joinedAt     DateTime?

  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  scores  Score[]

  @@map("participants")
}

model Score {
  id            String   @id @default(cuid())
  participantId String
  sessionId     String
  rarity        Int
  social        Int
  distance      Int
  context       Int
  penalties     String[] @default([])
  personalScore Int
  submittedAt   DateTime @default(now())

  participant Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)
  session     Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@unique([participantId, sessionId])
  @@map("scores")
}

enum SessionStatus {
  WAITING
  ACTIVE
  COMPLETED
}
